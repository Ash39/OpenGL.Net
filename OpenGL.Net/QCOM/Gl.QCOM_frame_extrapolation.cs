
// MIT License
// 
// Copyright (c) 2009-2017 Luca Piccioni
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// This file is automatically generated

#pragma warning disable 649, 1572, 1573

// ReSharper disable RedundantUsingDirective
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;

using Khronos;

// ReSharper disable CheckNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable JoinDeclarationAndInitializer

namespace OpenGL
{
	public partial class Gl
	{
		/// <summary>
		/// [GL] glExtrapolateTex2DQCOM: Binding for glExtrapolateTex2DQCOM.
		/// </summary>
		/// <param name="src1">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="src2">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="output">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="scaleFactor">
		/// A <see cref="T:float"/>.
		/// </param>
		[RequiredByFeature("GL_QCOM_frame_extrapolation", Api = "gles2")]
		public static void ExtrapolateTex2DQCOM(uint src1, uint src2, uint output, float scaleFactor)
		{
			Debug.Assert(Delegates.pglExtrapolateTex2DQCOM != null, "pglExtrapolateTex2DQCOM not implemented");
			Delegates.pglExtrapolateTex2DQCOM(src1, src2, output, scaleFactor);
			LogCommand("glExtrapolateTex2DQCOM", null, src1, src2, output, scaleFactor			);
			DebugCheckErrors(null);
		}

		internal static unsafe partial class Delegates
		{
			[RequiredByFeature("GL_QCOM_frame_extrapolation", Api = "gles2")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glExtrapolateTex2DQCOM(uint src1, uint src2, uint output, float scaleFactor);

			[RequiredByFeature("GL_QCOM_frame_extrapolation", Api = "gles2")]
			[ThreadStatic]
			internal static glExtrapolateTex2DQCOM pglExtrapolateTex2DQCOM;

		}
	}

}
